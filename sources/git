#!/usr/bin/env sh

function git_info() {
  git rev-parse --is-inside-work-tree &>/dev/null || return
  branch=`git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||'`
  dirty=`git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ] && echo -e "*"`

  echo " ("$branch$dirty")"
}

function git_prune() {
  git branch --merged | egrep -v "(^\*|master)" | xargs git branch -d
}

function git_pull() {
  git_browse 'git pull'
}

function git_sync() {
  git_browse 'git pull && git push'
}

function watch_sync() {
  echo Usage: watch_sync [REMOTE_SERVER] [REMOTE_PATH_FROM_HOME]

  fswatch -0 --exclude=.git/ . | while read -d "" event
  do
    git status --porcelain | awk '{print $2}' | sed "s|\(.*\)|rsync -ca \1 ${1}:~/${2}/\1|" | sh
  done
}

function git_checkout() {
  git_browse 'git checkout ${1}'
}

function git_browse() {
  currentWorkDir=`pwd`

  for dir in ${currentWorkDir}/*; do
    cd ${dir}
    if [ `git rev-parse --is-inside-work-tree 2>/dev/null | grep true | wc -l` -eq 1 ]; then
      echo ${dir} && sh -c "$@"
    fi
  done

  cd ${currentWorkDir}
}
