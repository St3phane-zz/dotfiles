#!/bin/sh

function dmounts() {
  docker inspect --format='{{range .Mounts}}{{if ne .Driver "local"}}{{.Source}} = {{.Destination}}|{{end}}{{end}}' --type=container ${1} | tr "|" "\n"
}

function denvs() {
  docker inspect --format='{{range $p := .Config.Env}}{{$p}}|{{end}}' --type=container ${1} | tr "|" "\n"
}

function dlinks() {
  docker inspect --format='{{range $p := .HostConfig.Links}}{{$p}}|{{end}}' --type=container ${1} | tr "|" "\n"
}

function dports() {
  docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}}{{$p}} -> {{(index $conf 0).HostPort}}|{{end}}' --type=container ${1} | tr "|" "\n"
}

function nobody_nogroup_write() {
  chmod -R g+w ${1} && chown -R 65534:65533 ${1}
}

function docker_arm() {
  if [ -f "docker-compose.yml" ]; then
    sed -i '' -e 's|image: vibioh\/\([^:]*\)|image: vibioh\/\1-arm|g' docker-compose.yml
    sed -i '' -e 's|image: traefik|image: vibioh\/traefik-arm|g' docker-compose.yml
  fi

  if [ -f "Dockerfile" ]; then
    sed -i '' -e 's|FROM alpine|FROM vibioh\/alpine-arm|g' Dockerfile
    sed -i '' -e 's|FROM vibioh\/\([^:]*\)|FROM vibioh\/\1-arm|g' Dockerfile
  fi

  if [ -f "Makefile" ]; then
    sed -i '' -e 's|docker build -t vibioh\/\([^: ]*\)|docker build -t vibioh\/\1-arm|g' Makefile
  fi
}

function dclean() {
  forceWord=force

  if [ "${#}" -eq 2 ] && [ "${2}" != "${forceWord}" ]; then
    echo Usage: dclean [name prefix] [?force]
    return
  fi

  if [ "${1}" == "${forceWord}" ] || [ "${2}" == "${forceWord}" ]; then
    exclude_containers=""
  else
    exclude_containers=`docker ps -a -q -f label=keep=true 2>/dev/null`
  fi

  if [ ! -z "${1}" ] && [ "${1}" != "${forceWord}" ]; then
    end_containers=`docker ps -a -q -f name=${1} 2>/dev/null`
  else
    end_containers=`docker ps -a -q -f status=exited -f status=created 2>/dev/null`
  fi

  if [ ! -z "${exclude_containers}" ]; then
    end_containers=`echo ${end_containers} | tr " " "\n" | grep -v "${exclude_containers}"`
  fi
  docker rm -f ${end_containers} 2>/dev/null
  docker rmi `docker images --filter dangling=true -q 2>/dev/null` 2>/dev/null
}

if [ `cat /etc/hosts 2>/dev/null | grep docker | grep -v 127.0 | wc -l` -eq 1 ]; then
  export DOCKER_HOST=tcp://docker:2376 DOCKER_TLS_VERIFY=1
fi
