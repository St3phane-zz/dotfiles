" Turnoff vi backward compatibility
set nocompatible

" Vundle Configuration
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'

" Status bar
Plugin 'vim-airline/vim-airline'

" Oceanic Next Theme
Plugin 'mhartington/oceanic-next'

" SuperTab for completion
Plugin 'ervandew/supertab'

" Default completion to OmniCompletion
let g:SuperTabDefaultCompletionType = 'context'

" Syntax checking
Plugin 'vim-syntastic/syntastic'

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_javascript_eslint_exec = 'eslint_d'
let g:syntastic_go_checkers = ['go', 'golint', 'errcheck']

" Golang tool
Plugin 'fatih/vim-go'

let g:go_fmt_command = "goimports"
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1

" GoTo Def is <leader>v
au Filetype go nnoremap <leader>v :vsp <CR>:GoDef <CR>
" Rename is <leader>r
au Filetype go nnoremap <leader>r :GoRename <CR>

" Golang completion
Plugin 'nsf/gocode', {'rtp': 'vim/'}

" Javascript syntax
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'

" Javascript completion
Plugin 'ternjs/tern_for_vim'

" GoTo Def is <leader>v
au FileType javascript noremap <leader>v :TernDef <CR>
" Rename is <leader>r
au FileType javascript noremap <leader>r :TernRename <CR>

" Fuzzy File Finder
Plugin 'junegunn/fzf'

" Ctrl+p open fuzzy finder
map <C-p> :FZF<CR>

" Customize fzf colors to match color scheme
let g:fzf_colors =
  \ { 'fg':    ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

" Snippets tools
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'

call vundle#end()

" /shrug
filetype plugin indent on

" Syntax highlighting
syntax enable

" Line highlight
set cursorline

" Show line numbers
set number

" Default file encoding
set encoding=utf-8

" Show current command combination on bottom right
set showcmd

" Confirm change save
set confirm

" Wrap lines
set wrap

" Spaces tab's width and indent size
set tabstop=2 shiftwidth=2

" Insert spaces instead of tabs
set expandtab

" Backspace behavior for corresponding to most common apps
set backspace=indent,eol,start

" Hightlight search
set hlsearch

" Search as you type character
set incsearch

" Ignore case in search
set ignorecase

" Search with smart case (if uppercase provided, search is case sensitive)
set smartcase

" Activate color scheme
colorscheme OceanicNext

" Omni completion
set completeopt=longest,menuone
set omnifunc=syntaxcomplete#Complete

" Show vertical ruler
set colorcolumn=100

" Disable folding
set nofoldenable

" Setting <Leader>
let mapleader = ','

" ag search https://gist.github.com/manasthakur/5afd3166a14bbadc1dc0f42d070bd746
if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor
endif

function! MySearch()
  let grep_term = input("Enter search term: ")
  if !empty(grep_term)
    execute 'silent grep' grep_term | copen
  else
    echo "Empty search term"
  endif
  redraw!
endfunction

command! Search call MySearch()
nnoremap <leader>s :Search<CR>
nnoremap <leader>* :silent grep <cword> \| copen<CR><C-l>
